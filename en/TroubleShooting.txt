!Trouble Shooting
This section addresses common problems that can arise when using Unity. Each platform is dealt with separately below.

(:tocportion:)

!Platform Trouble Shooting

[[#DesktopTroubleShooting]]
!Desktop!
>>desktop<<
!!Geforce 7300GT on OSX 10.6.4
* Deferred rendering is disabled because materials are not displayed correctly for Geforce 7300GT on OX 10.6.4; This happens because of buggy video drivers.

!!On Windows x64, Unity crashes when my script throws a NullReferenceException
* Please apply [[http://support.microsoft.com/kb/976038 | Windows Hotfix #976038]].

!!Script Editing
!!!Is there a way to get rid of the welcome page in MonoDevelop?
* Yes. In the MonoDevelop preferences, go to the Visual Style section, and uncheck "Load welcome page on startup".

!!!Why does my script open in MonoDevelop when I have selected Visual Studio as my script editor?
* This happens when VS reports that it failed to open your script. The most common cause for this is an external plugin (e.g. Resharper) popping up a dialog at startup, requesting input from the user - this will cause VS to report that it failed to open.

[[#DesktopShadowTroubleShooting]]
!! Graphics
!!! Slow framerate and/or visual artifacts.
* This may occur if your video card drivers are not up to date. Make sure you have the latest official drivers from your card vendor.




!! Shadows
!!! I see no shadows at all!

* Unity free supports realtime shadows (hard shadows) using one directional light. All other shadow features which Unity supports are in Unity Pro. Simpler shadow methods, like using a [[class-Projector | Projector]], are still possible, of course.
* Shadows also require certain graphics hardware support. See [[Shadows]] page for details.
* Check if shadows are not completely disabled in [[class-QualitySettings | Quality Settings]].
* Shadows on Android and iOS have these limitations : soft shadows are not available and in forward rendering rendering path only a single directional light can cast shadows. There is no limit to the number of lights casting shadows in the deferred rendering path.

!!! Some of my objects do not cast or receive shadows

An object's [[class-MeshRenderer | Renderer]] must have ``Receive Shadows`` enabled for shadows to be rendered onto it. Also, an object must have ``Cast Shadows`` enabled in order to cast shadows on other objects (both are on by default).

Only opaque objects cast and receive shadows. This means that objects using the built-in [[shader-TransparentFamily | Transparent]] or Particle shaders will not cast shadows. In most cases it is possible to use [[shader-TransparentCutoutFamily | Transparent Cutout]] shaders for objects like fences, vegetation, etc. If you use custom written [[Shaders]], they have to be pixel-lit and use the [[SL-SubshaderTags | Geometry render queue]]. Objects using ``VertexLit`` shaders do not receive shadows but are able to cast them.

Only $$Pixel lights$$ cast shadows. If you want to make sure that a light always casts shadows no matter how many other lights are in the scene, then you can set it to ``Force Pixel`` render mode (see the [[class-Light | Light]] reference page).


>><<
[[#iPhoneTroubleShooting]]
!iOS!
>>ios<<
(:include TroubleShootingIPhone:)
>><<
[[#AndroidTroubleShooting]]
!Android!
>>android<<
(:include TroubleShootingAndroid:)
>><<
